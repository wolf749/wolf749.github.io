<!DOCTYPE html>
<html lang="en">
    
    <head>
        <title>Clayton Anderson</title>
        <meta charset="utf-8">
            <meta name="Description" content="">
                <link rel="stylesheet" type="text/css" href="style.css">
    </head>
    
    
    <!--[if lt IE 9]>
     <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js">
     </script>
     <![endif]-->
    
    <body>
        
        <header>
            <h1 class ="specialname"><a href="./">Clayton Anderson</a></h1>
            <nav>
                <ul>
                    <li><a href="./">Home</a></li>
                    <li><a href="./Extended_About.html">Articles</a></li>
                    <li><a href="./Research_Ideas.html">Research Ideas</a></li>
                    <li>
                        <div class="dropdown">
                            <button class = "dropbtn"> <a href="./Projects.html">Projects</a>
                            </button>
                            <div class="dropdown-content">
                                <a href="./Project1.html"> Procedural Terrain</a>
                                <a href="./Project2.html"> Curve Vector Space</a>
                                <a href="./Project3.html"> Computational Physics</a>
                                <a href="./Project4.html"> Bezier Patch Pathfinding</a>
                                <a href="./Project5.html"> Level Set Surfaces</a>
                                <a href="./Project6.html"> Generalized Thomson Problem</a>
                                <a href="./Project7.html"> Shape Grammar Building</a>
                                <a href="./Project8.html"> 2D Ising Model</a>
                                <a href="./Project9.html"> Arch Analysis</a>
                                <a href="./Project10.html"> Infection Game</a>
                            </div>
                        </div>
                    </li>
                    <li><a href="./myGame.html"> My Game </a></li>
                    <li><a href="./Teaching.html"> Teaching </a></li>
                </ul>
            </nav>
        </header>
        
        
<!--        Project 1 Section-->

        <section>
            <p> This section contains various ideas I've had for possible future research. Most ideas will probably be quite terse in their presentation here as I hope to migrate them over to projects as I have time to develop them more fully. </p>
            <hr>
            
            <button class="accordion"> Level of Detail, Pathfinding, and Smooth Terrain</button>
            <div class="panel">
                <p>
                I've already talked a bit about this elsewhere (articles - terrain) but I'll summarize my thoughts here. Potential gains for using a smooth terrain representation (e.g. implicit surface) and dynamically triangulating to render:
                <br>
                <br>(1) Large terrain memory efficiency; the equation for an implicit surface paired with a triangulating scheme can encode large amounts of terrain for virtually no memory.
                <br>(2) Building the level of detail into the triangulation scheme prevents the necessity for lower res terrain meshes.
                <br>(3) Smooth pathfinding algorithms paired with mesh-projection methods makes pathfinding indepedent of level of detail, and removes the necessity for nav meshes, or any kind of navigation data structure.
                <br>(4) Procedural terrain algorithms tend to work better with underlying implicit surfaces than mesh-based approaches (see first example of level set surfaces project or procedural terrain project).
                </p>
                
                <p>
                Downsides to the proposed scheme:
                <br>
                <br>(1) Real-time triangulation of smooth surfaces is barely possible (for implicit surfaces, but possible for parametrized surfaces).
                <br>(2) Pathfinding on smooth manifolds is also extremely difficult to do in real-time.
                <br>(3) There are currently no methods that can handle pathfinding problems on smooth manifolds when there are obstacles on the manifold (regions where the paths can't enter - arguably there are methods but they turn the smooth problem into a graph-search problem).
                </p>
                
            </div>
            

            <button class="accordion">Pathfinding Balloons</button>
            <div class="panel">
                <p>
                Pathfinding on smooth manifolds with obstacles. Suppose we have a parametrization of a surface, say a Bezier patch p(u,v) embedding in Euclidean 3D space (the ambient space). Then suppose there is a region in the ambient space that paths are not allowed to enter. Further suppose we can find the outline of this obstacle on the surface p(u,v) and finding the corresponding region of the domain, (u,v) that represent invalid values. We can define a new surface p'(u,v) that is equal to p(u,v) everywhere except when (u,v) maps to a point inside the obstacle.
                </p>
                <p>
                What we want to do is replace the "black zone" corresponding to the obstacle with an extension of the original surface p(u,v) in such a way that (1) the extension is smooth so pathfinding algorithms still work, and (2) the shortest path between any two points outside the obstacle will never pass through the obstacle.
                </p>
                <p>
                We can do this by defining p'(u,v) to be p(u,v) when (u,v) is not inside the obstacle, and the point on a "balloon" positioned so that it's intersection with p(u,v) is exactly the outline of the obstacle. Furthermore the transition between balloon and p(u,v) must be smooth but nearly anti-parallel so that no path will ever get shorter by including some part of it. See diagram for visuals.
                </p>
                
            </div>
            
            <button class="accordion"> Arbitrary Bezier Patch Geodesics</button>
            <div class="panel">
                <p>
                One of the problems with doing pathfinding on smooth surfaces is that it takes a long time. However we don't have just any surfaces; if we restrict ourselves to Bezier Patches, then we might be able to reuse our previous solutions in later pathfinding calls. Put another way, the Bezier Patch has a closed form parametrization dependent on it's 16 control points. There are two ways this can help, (1) writing down the geodesic equations for an arbitrary BP might show some symmetry that can be utilized in the numerical solution, and (2) solutions for a BP with some specified control points might be useful in finding the solution for a BP with different control points.
                </p>
            </div>
            
            <button class="accordion">Multivariable Feynman Path Apporximation</button>
            <div class="panel">
                <p>
                The Feynman Path Formulation of Quantum Physics elucidates how we can consider an electron to be a particle that travels all paths between one place and another, and the extent to which it's action is minimized along those paths corresponds directly to the probability of measurement should we decide to measure a particle path. The Feynman Propagator is the exponential of the integral of the action, integrating over all possible paths between two points. In one dimension a finite difference approximation to the paths can yield a matrix form for the propagator, which we can use to move the particle along by multiplying it's wavefunction by the propagator matrix each time step. To finite difference the infinite set of paths, we first split it up into a 1D grid, so each x_i corresponds to a grid point. Then we discretize the values each x_i can take, so if the path were "0" and the particle never went anywhere, each x_i would just be zero. So in effect this gives the two indices required for a matrix, x_ij represents the value of the x_i grid element.
                </p>
                
                <p>
                To go to 2D (and use for pathfinding) this approach needs a tensor with four indices as opposed to two, since each path has to be broken up in two directions, and then each point along the path can vary in two directions. It's not immediately obvious what sort of transformation rules we would need to propagator the wavefunction (now a matrix). However, we could arrange all the 4D entries inside a matrix (block matrix), but this seems a bit complicated.
                </p>
            </div>
            
            <button class="accordion">Poisson Eq. as Pathfinding</button>
            <div class="panel">
                <p>
                Opposite sign charges attract one another. 
                </p>
            </div>
            
            <button class="accordion">Ideal Pathfinding Data Structure / Representation</button>
            <div class="panel">
                <p>
                
                </p>
            </div>
            
            <button class="accordion">Implicit Surface Modeling</button>
            <div class="panel">
                <p>
                </p>
            </div>
            
            <button class="accordion">Interpolating Families of Curves</button>
            <div class="panel">
                <p>
                </p>
            </div>
            



        </section>
        
        <footer>
            <div class=contactinfo>
                <h3 class ="specialname">Contact</h3>
                <table border="0" style="width:100%">
                    <col width="150px">
                        <tr>
                            <td>Email:</td>
                            <td><a href="mailto:ckanders@ucsd.edu">ckanders@ucsd.edu</a></td>
                        </tr>
                        <tr>
                            <td>LinkedIn:</td>
                            <td><a href= "https://www.linkedin.com/in/clayton-anderson-524265112
                                ">https://www.linkedin.com/in/clayton-anderson-524265112</a></td>
                        </tr>
                        <tr>
                            <td>Office:</td>
                            <td>Mayer Hall 4523</td>
                        </tr>
                        <tr>
                            <td valign="top">Mailing Address:</td>
                            <td>Clayton Anderson<br>
                                University of California, San Diego<br>
                                <br>
                            </td>
                        </tr>
                        </table>
            </div>
            <hr>
            <div class=copyright>
                <p>&copy; 2015 <a href="./">Clayton Anderson</a>. All rights reserved.</p>
            </div>
        </footer>
        
        <script>
            var acc = document.getElementsByClassName("accordion");
            var i;
            
            for (i = 0; i < acc.length; i++) {
                acc[i].onclick = function(){
                    this.classList.toggle("active");
                    this.nextElementSibling.classList.toggle("show");
                }
            }
        </script>
        
    </body>
</html>
